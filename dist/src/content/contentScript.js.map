{"version":3,"file":"contentScript.js","sources":["../../../src/content/contentScript.tsx"],"sourcesContent":["/**\r\n * Content Script - 注入到页面的脚本\r\n * \r\n * 功能：\r\n * - 监听文本选择和双击事件\r\n * - 创建独立的 Shadow DOM 容器避免样式冲突\r\n * - 显示翻译气泡和沉浸式覆盖层\r\n * - 与 Service Worker 通信获取翻译结果\r\n * \r\n * 样式隔离：使用 Shadow DOM 确保扩展样式不影响宿主页面\r\n * 通信约束：所有网络请求通过 Service Worker 处理，Content Script 不直接访问外部API\r\n */\r\n\r\n// 类型定义\r\ninterface TranslationBubble {\r\n  show: (selection: Selection, text: string, rect: DOMRect) => void;\r\n  hide: () => void;\r\n  isVisible: () => boolean;\r\n}\r\n\r\ninterface TranslationResult {\r\n  ok: boolean;\r\n  data?: {\r\n    translatedText: string;\r\n    detectedLanguage?: string;\r\n    alternatives?: string[];\r\n  };\r\n  error?: {\r\n    code: string;\r\n    message: string;\r\n  };\r\n}\r\n\r\n// 全局状态\r\nlet shadowRoot: ShadowRoot | null = null;\r\nlet bubbleContainer: HTMLDivElement | null = null;\r\nlet isImmersiveMode = false;\r\nlet currentSelection: Selection | null = null;\r\n\r\n// 创建 Shadow DOM 容器\r\nfunction createShadowContainer(): ShadowRoot {\r\n  if (shadowRoot) return shadowRoot;\r\n\r\n  const container = document.createElement('div');\r\n  container.id = 'immersive-translate-container';\r\n  container.style.cssText = `\r\n    position: fixed !important;\r\n    top: 0 !important;\r\n    left: 0 !important;\r\n    z-index: 2147483647 !important;\r\n    pointer-events: none !important;\r\n  `;\r\n\r\n  shadowRoot = container.attachShadow({ mode: 'open' });\r\n  \r\n  // 加载样式\r\n  const styleLink = document.createElement('link');\r\n  styleLink.rel = 'stylesheet';\r\n  styleLink.href = chrome.runtime.getURL('src/content/contentStyle.css');\r\n  shadowRoot.appendChild(styleLink);\r\n\r\n  document.documentElement.appendChild(container);\r\n  return shadowRoot;\r\n}\r\n\r\n// 与 Service Worker 通信\r\nasync function sendMessage(type: string, payload: any): Promise<TranslationResult> {\r\n  return new Promise((resolve) => {\r\n    chrome.runtime.sendMessage({ type, payload }, (response) => {\r\n      if (chrome.runtime.lastError) {\r\n        resolve({\r\n          ok: false,\r\n          error: {\r\n            code: 'RUNTIME_ERROR',\r\n            message: chrome.runtime.lastError.message || 'Runtime error'\r\n          }\r\n        });\r\n      } else {\r\n        resolve(response);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// 翻译文本\r\nasync function translateText(text: string, source: string = 'auto', target: string = 'zh'): Promise<TranslationResult> {\r\n  const payload = {\r\n    id: Date.now().toString(),\r\n    text: text.trim(),\r\n    source,\r\n    target,\r\n    format: 'text'\r\n  };\r\n\r\n  return await sendMessage('translate', payload);\r\n}\r\n\r\n// 创建翻译气泡\r\nfunction createTranslationBubble(): TranslationBubble {\r\n  let bubble: HTMLDivElement | null = null;\r\n  let isVisible = false;\r\n\r\n  const show = async (selection: Selection, text: string, rect: DOMRect) => {\r\n    if (text.length < 1 || text.length > 1000) return;\r\n\r\n    const shadow = createShadowContainer();\r\n    \r\n    // 移除旧气泡\r\n    if (bubble) {\r\n      bubble.remove();\r\n    }\r\n\r\n    // 创建气泡容器\r\n    bubble = document.createElement('div');\r\n    bubble.className = 'translation-bubble';\r\n    bubble.style.cssText = `\r\n      position: fixed;\r\n      left: ${rect.left + rect.width / 2}px;\r\n      top: ${rect.bottom + 8}px;\r\n      transform: translateX(-50%);\r\n      pointer-events: auto;\r\n      z-index: 10000;\r\n    `;\r\n\r\n    // 气泡内容\r\n    bubble.innerHTML = `\r\n      <div class=\"bubble-content\">\r\n        <div class=\"bubble-header\">\r\n          <div class=\"original-text\">${escapeHtml(text)}</div>\r\n          <button class=\"btn-close\" title=\"关闭翻译框\">✕</button>\r\n        </div>\r\n        <div class=\"translation-loading\">\r\n          <div class=\"loading-spinner\"></div>\r\n          <span>翻译中...</span>\r\n        </div>\r\n        <div class=\"translation-result\" style=\"display: none;\">\r\n          <div class=\"translated-text\"></div>\r\n          <div class=\"bubble-actions\">\r\n            <button class=\"btn-copy\" title=\"复制翻译\">📋</button>\r\n            <button class=\"btn-replace\" title=\"替换原文\">🔄</button>\r\n            <button class=\"btn-more\" title=\"更多选项\">⚙️</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"bubble-error\" style=\"display: none;\">\r\n          <span class=\"error-message\">翻译失败</span>\r\n          <button class=\"btn-retry\">重试</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"bubble-arrow\"></div>\r\n    `;\r\n\r\n    shadow.appendChild(bubble);\r\n    isVisible = true;\r\n\r\n    // 绑定事件\r\n    bindBubbleEvents(bubble, selection, text);\r\n\r\n    // 开始翻译\r\n    try {\r\n      const result = await translateText(text);\r\n      updateBubbleContent(bubble, result);\r\n    } catch (error) {\r\n      showBubbleError(bubble, error.message);\r\n    }\r\n\r\n    // 点击外部关闭\r\n    setTimeout(() => {\r\n      document.addEventListener('click', handleOutsideClick, true);\r\n    }, 100);\r\n  };\r\n\r\n  const hide = () => {\r\n    if (bubble) {\r\n      bubble.remove();\r\n      bubble = null;\r\n      isVisible = false;\r\n      document.removeEventListener('click', handleOutsideClick, true);\r\n    }\r\n  };\r\n\r\n  const handleOutsideClick = (event: Event) => {\r\n    if (bubble && event.target && !bubble.contains(event.target as Node)) {\r\n      hide();\r\n    }\r\n  };\r\n\r\n  return { show, hide, isVisible: () => isVisible };\r\n}\r\n\r\n// 绑定气泡事件\r\nfunction bindBubbleEvents(bubble: HTMLDivElement, selection: Selection, originalText: string) {\r\n  const closeBtn = bubble.querySelector('.btn-close') as HTMLButtonElement;\r\n  const copyBtn = bubble.querySelector('.btn-copy') as HTMLButtonElement;\r\n  const replaceBtn = bubble.querySelector('.btn-replace') as HTMLButtonElement;\r\n  const moreBtn = bubble.querySelector('.btn-more') as HTMLButtonElement;\r\n  const retryBtn = bubble.querySelector('.btn-retry') as HTMLButtonElement;\r\n\r\n  // 关闭按钮事件\r\n  closeBtn?.addEventListener('click', () => {\r\n    translationBubble.hide();\r\n  });\r\n\r\n  copyBtn?.addEventListener('click', () => {\r\n    const translatedText = bubble.querySelector('.translated-text')?.textContent;\r\n    if (translatedText) {\r\n      navigator.clipboard.writeText(translatedText).then(() => {\r\n        showToast('已复制到剪贴板');\r\n      });\r\n    }\r\n  });\r\n\r\n  replaceBtn?.addEventListener('click', () => {\r\n    const translatedText = bubble.querySelector('.translated-text')?.textContent;\r\n    if (translatedText && selection.rangeCount > 0) {\r\n      const range = selection.getRangeAt(0);\r\n      range.deleteContents();\r\n      range.insertNode(document.createTextNode(translatedText));\r\n      selection.removeAllRanges();\r\n      translationBubble.hide();\r\n      showToast('已替换原文');\r\n    }\r\n  });\r\n\r\n  moreBtn?.addEventListener('click', () => {\r\n    openImmersiveMode(originalText);\r\n  });\r\n\r\n  retryBtn?.addEventListener('click', async () => {\r\n    showBubbleLoading(bubble);\r\n    try {\r\n      const result = await translateText(originalText);\r\n      updateBubbleContent(bubble, result);\r\n    } catch (error) {\r\n      showBubbleError(bubble, error.message);\r\n    }\r\n  });\r\n}\r\n\r\n// 更新气泡内容\r\nfunction updateBubbleContent(bubble: HTMLDivElement, result: TranslationResult) {\r\n  const loadingEl = bubble.querySelector('.translation-loading') as HTMLDivElement;\r\n  const resultEl = bubble.querySelector('.translation-result') as HTMLDivElement;\r\n  const errorEl = bubble.querySelector('.bubble-error') as HTMLDivElement;\r\n  const translatedTextEl = bubble.querySelector('.translated-text') as HTMLDivElement;\r\n\r\n  loadingEl.style.display = 'none';\r\n  errorEl.style.display = 'none';\r\n\r\n  if (result.ok && result.data) {\r\n    translatedTextEl.textContent = result.data.translatedText;\r\n    resultEl.style.display = 'block';\r\n  } else {\r\n    showBubbleError(bubble, result.error?.message || '翻译失败');\r\n  }\r\n}\r\n\r\n// 显示气泡加载状态\r\nfunction showBubbleLoading(bubble: HTMLDivElement) {\r\n  const loadingEl = bubble.querySelector('.translation-loading') as HTMLDivElement;\r\n  const resultEl = bubble.querySelector('.translation-result') as HTMLDivElement;\r\n  const errorEl = bubble.querySelector('.bubble-error') as HTMLDivElement;\r\n\r\n  loadingEl.style.display = 'block';\r\n  resultEl.style.display = 'none';\r\n  errorEl.style.display = 'none';\r\n}\r\n\r\n// 显示气泡错误\r\nfunction showBubbleError(bubble: HTMLDivElement, message: string) {\r\n  const loadingEl = bubble.querySelector('.translation-loading') as HTMLDivElement;\r\n  const resultEl = bubble.querySelector('.translation-result') as HTMLDivElement;\r\n  const errorEl = bubble.querySelector('.bubble-error') as HTMLDivElement;\r\n  const errorMessageEl = bubble.querySelector('.error-message') as HTMLSpanElement;\r\n\r\n  loadingEl.style.display = 'none';\r\n  resultEl.style.display = 'none';\r\n  errorMessageEl.textContent = message;\r\n  errorEl.style.display = 'block';\r\n}\r\n\r\n// 打开沉浸式模式\r\nfunction openImmersiveMode(text: string) {\r\n  if (isImmersiveMode) return;\r\n\r\n  isImmersiveMode = true;\r\n  translationBubble.hide();\r\n\r\n  // 创建沉浸式覆盖层\r\n  const overlay = document.createElement('div');\r\n  overlay.className = 'immersive-overlay';\r\n  overlay.style.cssText = `\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    z-index: 2147483646;\r\n    pointer-events: auto;\r\n  `;\r\n\r\n  overlay.innerHTML = `\r\n    <div class=\"immersive-content\">\r\n      <div class=\"immersive-header\">\r\n        <h3>沉浸式翻译</h3>\r\n        <button class=\"btn-close\">✕</button>\r\n      </div>\r\n      <div class=\"immersive-body\">\r\n        <div class=\"original-panel\">\r\n          <h4>原文</h4>\r\n          <div class=\"text-content\">${escapeHtml(text)}</div>\r\n        </div>\r\n        <div class=\"translation-panel\">\r\n          <h4>译文</h4>\r\n          <div class=\"text-content loading\">翻译中...</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"immersive-footer\">\r\n        <button class=\"btn-copy-all\">复制译文</button>\r\n        <button class=\"btn-replace-all\">替换页面文本</button>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  const shadow = createShadowContainer();\r\n  shadow.appendChild(overlay);\r\n\r\n  // 绑定事件\r\n  const closeBtn = overlay.querySelector('.btn-close') as HTMLButtonElement;\r\n  const copyAllBtn = overlay.querySelector('.btn-copy-all') as HTMLButtonElement;\r\n  const replaceAllBtn = overlay.querySelector('.btn-replace-all') as HTMLButtonElement;\r\n\r\n  closeBtn.addEventListener('click', () => {\r\n    overlay.remove();\r\n    isImmersiveMode = false;\r\n  });\r\n\r\n  // 开始翻译\r\n  translateText(text).then(result => {\r\n    const translationPanel = overlay.querySelector('.translation-panel .text-content') as HTMLDivElement;\r\n    if (result.ok && result.data) {\r\n      translationPanel.textContent = result.data.translatedText;\r\n      translationPanel.classList.remove('loading');\r\n\r\n      // 绑定复制和替换事件\r\n      copyAllBtn.addEventListener('click', () => {\r\n        navigator.clipboard.writeText(result.data!.translatedText).then(() => {\r\n          showToast('已复制到剪贴板');\r\n        });\r\n      });\r\n\r\n      replaceAllBtn.addEventListener('click', () => {\r\n        if (currentSelection && currentSelection.rangeCount > 0) {\r\n          const range = currentSelection.getRangeAt(0);\r\n          range.deleteContents();\r\n          range.insertNode(document.createTextNode(result.data!.translatedText));\r\n          currentSelection.removeAllRanges();\r\n        }\r\n        overlay.remove();\r\n        isImmersiveMode = false;\r\n        showToast('已替换原文');\r\n      });\r\n    } else {\r\n      translationPanel.textContent = '翻译失败：' + (result.error?.message || '未知错误');\r\n      translationPanel.classList.remove('loading');\r\n    }\r\n  });\r\n\r\n  // ESC 键关闭\r\n  const handleEscape = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      overlay.remove();\r\n      isImmersiveMode = false;\r\n      document.removeEventListener('keydown', handleEscape);\r\n    }\r\n  };\r\n  document.addEventListener('keydown', handleEscape);\r\n}\r\n\r\n// 显示提示消息\r\nfunction showToast(message: string) {\r\n  const shadow = createShadowContainer();\r\n  const toast = document.createElement('div');\r\n  toast.className = 'toast-message';\r\n  toast.textContent = message;\r\n  toast.style.cssText = `\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 20px;\r\n    background: #333;\r\n    color: white;\r\n    padding: 12px 20px;\r\n    border-radius: 6px;\r\n    z-index: 10001;\r\n    pointer-events: auto;\r\n    opacity: 0;\r\n    transition: opacity 0.3s ease;\r\n  `;\r\n\r\n  shadow.appendChild(toast);\r\n\r\n  // 动画显示\r\n  requestAnimationFrame(() => {\r\n    toast.style.opacity = '1';\r\n  });\r\n\r\n  // 3秒后自动消失\r\n  setTimeout(() => {\r\n    toast.style.opacity = '0';\r\n    setTimeout(() => toast.remove(), 300);\r\n  }, 3000);\r\n}\r\n\r\n// HTML 转义\r\nfunction escapeHtml(text: string): string {\r\n  const div = document.createElement('div');\r\n  div.textContent = text;\r\n  return div.innerHTML;\r\n}\r\n\r\n// 获取选中文本和位置\r\nfunction getSelectionInfo(): { text: string; rect: DOMRect } | null {\r\n  const selection = window.getSelection();\r\n  if (!selection || selection.rangeCount === 0) return null;\r\n\r\n  const text = selection.toString().trim();\r\n  if (!text || text.length < 1 || text.length > 1000) return null;\r\n\r\n  const range = selection.getRangeAt(0);\r\n  const rect = range.getBoundingClientRect();\r\n  \r\n  return { text, rect };\r\n}\r\n\r\n// 创建翻译气泡实例\r\nconst translationBubble = createTranslationBubble();\r\n\r\n// 事件监听器\r\ndocument.addEventListener('mouseup', (event) => {\r\n  // 延迟检查选择，确保选择已完成\r\n  setTimeout(() => {\r\n    const selectionInfo = getSelectionInfo();\r\n    if (selectionInfo) {\r\n      currentSelection = window.getSelection();\r\n      translationBubble.show(currentSelection!, selectionInfo.text, selectionInfo.rect);\r\n    } else if (!translationBubble.isVisible()) {\r\n      translationBubble.hide();\r\n    }\r\n  }, 100);\r\n});\r\n\r\n// 双击翻译\r\ndocument.addEventListener('dblclick', (event) => {\r\n  setTimeout(() => {\r\n    const selectionInfo = getSelectionInfo();\r\n    if (selectionInfo) {\r\n      currentSelection = window.getSelection();\r\n      translationBubble.show(currentSelection!, selectionInfo.text, selectionInfo.rect);\r\n    }\r\n  }, 100);\r\n});\r\n\r\n// 键盘快捷键\r\ndocument.addEventListener('keydown', (event) => {\r\n  // Esc 关闭气泡\r\n  if (event.key === 'Escape') {\r\n    translationBubble.hide();\r\n  }\r\n  \r\n  // Ctrl+Shift+Y 开启沉浸式模式\r\n  if (event.ctrlKey && event.shiftKey && event.key === 'Y') {\r\n    event.preventDefault();\r\n    const selectionInfo = getSelectionInfo();\r\n    if (selectionInfo) {\r\n      currentSelection = window.getSelection();\r\n      openImmersiveMode(selectionInfo.text);\r\n    }\r\n  }\r\n});\r\n\r\n// 监听来自 Service Worker 的消息\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.type === 'toggleImmersive') {\r\n    const selectionInfo = getSelectionInfo();\r\n    if (selectionInfo) {\r\n      currentSelection = window.getSelection();\r\n      openImmersiveMode(selectionInfo.text);\r\n    }\r\n  }\r\n});\r\n\r\nconsole.log('Immersive Translate Content Script loaded');"],"names":[],"mappings":"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"}