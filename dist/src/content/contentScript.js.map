{"version":3,"file":"contentScript.js","sources":["../../../src/content/contentScript.tsx"],"sourcesContent":["/**\n * Content Script - 注入到页面的脚本\n * \n * 功能：\n * - 监听文本选择和双击事件\n * - 创建独立的 Shadow DOM 容器避免样式冲突\n * - 显示翻译气泡和沉浸式覆盖层\n * - 与 Service Worker 通信获取翻译结果\n * \n * 样式隔离：使用 Shadow DOM 确保扩展样式不影响宿主页面\n * 通信约束：所有网络请求通过 Service Worker 处理，Content Script 不直接访问外部API\n */\n\n// 类型定义\ninterface TranslationBubble {\n  show: (selection: Selection, text: string, rect: DOMRect) => void;\n  hide: () => void;\n  isVisible: () => boolean;\n}\n\ninterface TranslationResult {\n  ok: boolean;\n  data?: {\n    translatedText: string;\n    detectedLanguage?: string;\n    alternatives?: string[];\n  };\n  error?: {\n    code: string;\n    message: string;\n  };\n}\n\n// 全局状态\nlet shadowRoot: ShadowRoot | null = null;\nlet bubbleContainer: HTMLDivElement | null = null;\nlet isImmersiveMode = false;\nlet currentSelection: Selection | null = null;\n// 拖动相关变量\nlet isDragging = false;\nlet dragOffsetX = 0;\nlet dragOffsetY = 0;\nlet currentBubble: HTMLDivElement | null = null;\n// 扩展状态\nlet extensionInitialized = false;\nlet retryCount = 0;\nconst MAX_RETRY_COUNT = 3;\n\n// 初始化扩展\nasync function initializeExtension(): Promise<boolean> {\n  try {\n    if (extensionInitialized) return true;\n\n    // 检查扩展状态\n    const isReady = await checkExtensionStatus();\n    if (isReady) {\n      extensionInitialized = true;\n      retryCount = 0;\n      console.log('Extension initialized successfully');\n      return true;\n    } else {\n      throw new Error('Extension not ready');\n    }\n  } catch (error) {\n    console.warn('Extension initialization failed:', error);\n    retryCount++;\n\n    if (retryCount < MAX_RETRY_COUNT) {\n      // 等待一段时间后重试\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return initializeExtension();\n    } else {\n      console.error('Extension initialization failed after max retries');\n      // 重置状态，允许下次重试\n      extensionInitialized = false;\n      retryCount = 0;\n      return false;\n    }\n  }\n}\n\n// 重置扩展状态\nfunction resetExtensionState() {\n  extensionInitialized = false;\n  retryCount = 0;\n  console.log('Extension state reset');\n}\n\n// 监听页面可见性变化，在页面重新激活时重置状态\ndocument.addEventListener('visibilitychange', () => {\n  if (!document.hidden) {\n    resetExtensionState();\n  }\n});\n\n// 监听页面卸载，清理状态\nwindow.addEventListener('beforeunload', () => {\n  resetExtensionState();\n});\n\n// 页面加载完成后自动初始化扩展\ndocument.addEventListener('DOMContentLoaded', async () => {\n  console.log('Page loaded, initializing extension...');\n  try {\n    await initializeExtension();\n  } catch (error) {\n    console.warn('Auto-initialization failed:', error);\n  }\n});\n\n// 如果页面已经加载完成，立即初始化\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', async () => {\n    console.log('Page loaded, initializing extension...');\n    try {\n      await initializeExtension();\n    } catch (error) {\n      console.warn('Auto-initialization failed:', error);\n    }\n  });\n} else {\n  // 页面已经加载完成，立即初始化\n  console.log('Page already loaded, initializing extension...');\n  initializeExtension().catch(error => {\n    console.warn('Auto-initialization failed:', error);\n  });\n}\n\n// 创建 Shadow DOM 容器\nfunction createShadowContainer(): ShadowRoot {\n  if (shadowRoot) return shadowRoot;\n\n  const container = document.createElement('div');\n  container.id = 'immersive-translate-container';\n  container.style.cssText = `\n    position: fixed !important;\n    top: 0 !important;\n    left: 0 !important;\n    z-index: 2147483647 !important;\n    pointer-events: none !important;\n  `;\n\n  shadowRoot = container.attachShadow({ mode: 'open' });\n\n  // 加载样式\n  const styleLink = document.createElement('link');\n  styleLink.rel = 'stylesheet';\n  styleLink.href = chrome.runtime.getURL('contentStyle.css');\n  shadowRoot.appendChild(styleLink);\n\n  document.documentElement.appendChild(container);\n  return shadowRoot;\n}\n\n// 与 Service Worker 通信\nasync function sendMessage(type: string, payload: any): Promise<TranslationResult> {\n  return new Promise((resolve) => {\n    try {\n      chrome.runtime.sendMessage({ type, payload }, (response) => {\n        if (chrome.runtime.lastError) {\n          console.warn(\"Error sending message to service worker:\", chrome.runtime.lastError.message);\n\n          // 检查是否是扩展上下文失效错误\n          if (chrome.runtime.lastError.message?.includes('Extension context invalidated')) {\n            resolve({\n              ok: false,\n              error: {\n                code: 'EXTENSION_CONTEXT_INVALIDATED',\n                message: '扩展上下文已失效，请刷新页面重试'\n              }\n            });\n          } else {\n            resolve({\n              ok: false,\n              error: {\n                code: 'RUNTIME_ERROR',\n                message: chrome.runtime.lastError.message || 'Runtime error'\n              }\n            });\n          }\n        } else {\n          resolve(response);\n        }\n      });\n    } catch (error: any) {\n      console.error(\"Failed to send message:\", error);\n      resolve({\n        ok: false,\n        error: {\n          code: 'MESSAGE_SEND_ERROR',\n          message: error.message || '消息发送失败'\n        }\n      });\n    }\n  });\n}\n\n// 检查扩展状态\nasync function checkExtensionStatus(): Promise<boolean> {\n  try {\n    // 检查chrome.runtime是否可用\n    if (!chrome.runtime || !chrome.runtime.sendMessage) {\n      console.warn('Chrome runtime not available');\n      return false;\n    }\n\n    // 尝试发送一个简单的ping消息\n    const result = await sendMessage('ping', {});\n    return result.ok;\n  } catch (error) {\n    console.warn('Extension status check failed:', error);\n    return false;\n  }\n}\n\n// 翻译文本\nasync function translateText(text: string, source: string = 'auto', target: string = 'zh'): Promise<TranslationResult> {\n  try {\n    // 首先初始化扩展\n    const isInitialized = await initializeExtension();\n    if (!isInitialized) {\n      return {\n        ok: false,\n        error: {\n          code: 'EXTENSION_NOT_READY',\n          message: '扩展未就绪，请点击重试按钮或刷新页面'\n        }\n      };\n    }\n\n    const payload = {\n      id: Date.now().toString(),\n      text: text.trim(),\n      source,\n      target,\n      format: 'text'\n    };\n\n    const result = await sendMessage('translate', payload);\n\n    // 如果遇到扩展上下文失效错误，尝试重新初始化\n    if (!result.ok && result.error?.code === 'EXTENSION_CONTEXT_INVALIDATED') {\n      console.log('Extension context invalidated, attempting to reinitialize...');\n      resetExtensionState();\n      const reinitResult = await initializeExtension();\n      if (reinitResult) {\n        // 重新尝试翻译\n        return await sendMessage('translate', payload);\n      }\n    }\n\n    return result;\n  } catch (error: any) {\n    console.error('Translation failed:', error);\n    return {\n      ok: false,\n      error: {\n        code: 'TRANSLATION_ERROR',\n        message: error.message || '翻译失败'\n      }\n    };\n  }\n}\n\n// 创建翻译气泡\nfunction createTranslationBubble(): TranslationBubble {\n  let bubble: HTMLDivElement | null = null;\n  let isVisible = false;\n\n  const show = async (selection: Selection, text: string, rect: DOMRect) => {\n    if (text.length < 1 || text.length > 1000) return;\n\n    const shadow = createShadowContainer();\n\n    // 移除旧气泡\n    if (bubble) {\n      bubble.remove();\n    }\n\n    // 创建气泡容器\n    bubble = document.createElement('div');\n    bubble.className = 'translation-bubble';\n    bubble.style.cssText = `\n      position: fixed;\n      left: ${rect.left + rect.width / 2}px;\n      top: ${rect.bottom + 8}px;\n      transform: translateX(-50%);\n      pointer-events: auto;\n      z-index: 10000;\n    `;\n\n    // 气泡内容\n    bubble.innerHTML = `\n      <div class=\"bubble-content\">\n        <div class=\"bubble-header\">\n          <div class=\"original-text\">${escapeHtml(text)}</div>\n          <button class=\"btn-close\" title=\"关闭翻译框\">✕</button>\n        </div>\n        <div class=\"translation-loading\">\n          <div class=\"loading-spinner\"></div>\n          <span>翻译中...</span>\n        </div>\n        <div class=\"translation-result\" style=\"display: none;\">\n          <div class=\"translated-text\"></div>\n          <div class=\"bubble-actions\">\n            <button class=\"btn-copy\" title=\"复制翻译\">📋</button>\n            <button class=\"btn-replace\" title=\"替换原文\">🔄</button>\n            <button class=\"btn-more\" title=\"更多选项\">⚙️</button>\n          </div>\n        </div>\n        <div class=\"bubble-error\" style=\"display: none;\">\n          <span class=\"error-message\">翻译失败</span>\n          <button class=\"btn-retry\">重试</button>\n        </div>\n      </div>\n      <div class=\"bubble-arrow\"></div>\n    `;\n\n    shadow.appendChild(bubble);\n    isVisible = true;\n    currentBubble = bubble;\n\n    // 绑定事件\n    bindBubbleEvents(bubble, selection, text);\n    bindDragEvents(bubble);\n\n    // 开始翻译\n    try {\n      const result = await translateText(text);\n      updateBubbleContent(bubble, result);\n    } catch (error: any) {\n      showBubbleError(bubble, error.message || '未知错误');\n    }\n\n    // 点击外部关闭\n    setTimeout(() => {\n      document.addEventListener('click', handleOutsideClick, true);\n    }, 100);\n  };\n\n  const hide = () => {\n    if (bubble) {\n      bubble.remove();\n      bubble = null;\n      isVisible = false;\n      currentBubble = null;\n      document.removeEventListener('click', handleOutsideClick, true);\n    }\n  };\n\n  const handleOutsideClick = (event: MouseEvent) => {\n    if (bubble && event.target && !bubble.contains(event.target as Node)) {\n      hide();\n    }\n  };\n\n  return { show, hide, isVisible: () => isVisible };\n}\n\n// 绑定拖动事件\nfunction bindDragEvents(bubble: HTMLDivElement) {\n  let isDragging = false;\n  let offsetX = 0, offsetY = 0;\n\n  const bubbleHeader = bubble.querySelector('.bubble-header') as HTMLElement;\n  if (!bubbleHeader) return;\n\n  bubbleHeader.addEventListener('mousedown', (e) => {\n    // 只有在标题栏上按下才触发拖动\n    isDragging = true;\n    const rect = bubble.getBoundingClientRect();\n    offsetX = e.clientX - rect.left;\n    offsetY = e.clientY - rect.top;\n\n    // 防止文本选择\n    e.preventDefault();\n  });\n\n  document.addEventListener('mousemove', (e) => {\n    if (!isDragging) return;\n\n    const x = e.clientX - offsetX;\n    const y = e.clientY - offsetY;\n\n    bubble.style.left = `${x}px`;\n    bubble.style.top = `${y}px`;\n    bubble.style.transform = 'none'; // 移除原有的变换\n\n    // 隐藏箭头\n    const arrow = bubble.querySelector('.bubble-arrow') as HTMLElement;\n    if (arrow) {\n      arrow.style.display = 'none';\n    }\n  });\n\n  document.addEventListener('mouseup', () => {\n    isDragging = false;\n  });\n}\n\n// 绑定气泡事件\nfunction bindBubbleEvents(bubble: HTMLDivElement, selection: Selection, originalText: string) {\n  const closeBtn = bubble.querySelector('.btn-close') as HTMLButtonElement;\n  const copyBtn = bubble.querySelector('.btn-copy') as HTMLButtonElement;\n  const replaceBtn = bubble.querySelector('.btn-replace') as HTMLButtonElement;\n  const moreBtn = bubble.querySelector('.btn-more') as HTMLButtonElement;\n  const retryBtn = bubble.querySelector('.btn-retry') as HTMLButtonElement;\n\n  // 关闭按钮事件\n  closeBtn?.addEventListener('click', () => {\n    translationBubble.hide();\n  });\n\n  copyBtn?.addEventListener('click', () => {\n    const translatedText = bubble.querySelector('.translated-text')?.textContent;\n    if (translatedText) {\n      navigator.clipboard.writeText(translatedText).then(() => {\n        showToast('已复制到剪贴板');\n      });\n    }\n  });\n\n  replaceBtn?.addEventListener('click', () => {\n    const translatedText = bubble.querySelector('.translated-text')?.textContent;\n    if (translatedText && selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(document.createTextNode(translatedText));\n      selection.removeAllRanges();\n      translationBubble.hide();\n      showToast('已替换原文');\n    }\n  });\n\n  moreBtn?.addEventListener('click', () => {\n    openImmersiveMode(originalText);\n  });\n\n  retryBtn?.addEventListener('click', async () => {\n    // 检查bubble是否仍然存在\n    if (!bubble || !document.contains(bubble)) {\n      console.warn('Bubble no longer exists, skipping retry');\n      return;\n    }\n    \n    showBubbleLoading(bubble);\n    try {\n      const result = await translateText(originalText);\n      updateBubbleContent(bubble, result);\n    } catch (error: any) {\n      showBubbleError(bubble, error.message || '未知错误');\n    }\n  });\n}\n\n// 更新气泡内容\nfunction updateBubbleContent(bubble: HTMLDivElement | null, result: TranslationResult) {\n  // 检查bubble是否存在\n  if (!bubble) {\n    console.warn('Bubble is null, cannot update content');\n    return;\n  }\n\n  const loadingEl = bubble.querySelector('.translation-loading') as HTMLDivElement;\n  const resultEl = bubble.querySelector('.translation-result') as HTMLDivElement;\n  const errorEl = bubble.querySelector('.bubble-error') as HTMLDivElement;\n  const translatedTextEl = bubble.querySelector('.translated-text') as HTMLDivElement;\n\n  // 检查所有必需的元素是否存在\n  if (!loadingEl || !resultEl || !errorEl || !translatedTextEl) {\n    console.warn('Required bubble elements not found for content update');\n    return;\n  }\n\n  loadingEl.style.display = 'none';\n  errorEl.style.display = 'none';\n\n  if (result.ok && result.data) {\n    // 创建带内联样式的翻译气泡容器\n    const bubbleDiv = document.createElement('div');\n    bubbleDiv.textContent = result.data.translatedText;\n    Object.assign(bubbleDiv.style, {\n      backgroundColor: '#f9f9f9',\n      color: '#000',\n      borderRadius: '8px',\n      padding: '8px',\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n      fontSize: '14px',\n      lineHeight: '1.6',\n      maxWidth: '300px',\n      wordWrap: 'break-word',\n      whiteSpace: 'pre-wrap',\n      zIndex: '999999',\n      display: 'inline-block',\n      pointerEvents: 'none',\n      backdropFilter: 'blur(1px)',\n      border: '1px solid rgba(0, 0, 0, 0.1)',\n    });\n\n    // 检测暗色模式\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      bubbleDiv.style.backgroundColor = 'rgba(30, 30, 30, 0.95)';\n      bubbleDiv.style.color = '#fff';\n      bubbleDiv.style.border = '1px solid rgba(255, 255, 255, 0.1)';\n    }\n\n    // 清空原来的translatedTextEl并添加新的包装元素\n    translatedTextEl.innerHTML = '';\n    translatedTextEl.appendChild(bubbleDiv);\n    resultEl.style.display = 'block';\n  } else {\n    showBubbleError(bubble, result.error?.message || '翻译失败');\n  }\n}\n\n// 显示气泡加载状态\nfunction showBubbleLoading(bubble: HTMLDivElement | null) {\n  // 检查bubble是否存在\n  if (!bubble) {\n    console.warn('Bubble is null, cannot show loading');\n    return;\n  }\n\n  // 检查bubble是否仍在DOM中\n  if (!document.contains(bubble)) {\n    console.warn('Bubble is no longer in DOM, cannot show loading');\n    return;\n  }\n\n  // 使用可选链操作符安全地查询元素\n  const loadingEl = bubble.querySelector('.translation-loading') as HTMLDivElement | null;\n  const resultEl = bubble.querySelector('.translation-result') as HTMLDivElement | null;\n  const errorEl = bubble.querySelector('.bubble-error') as HTMLDivElement | null;\n\n  // 检查所有必需的元素是否存在\n  if (!loadingEl || !resultEl || !errorEl) {\n    console.warn('Required bubble elements not found for loading');\n    return;\n  }\n\n  // 安全地设置样式\n  if (loadingEl) loadingEl.style.display = 'block';\n  if (resultEl) resultEl.style.display = 'none';\n  if (errorEl) errorEl.style.display = 'none';\n}\n\n// 显示气泡错误\nfunction showBubbleError(bubble: HTMLDivElement | null, message: string) {\n  // 检查bubble是否存在\n  if (!bubble) {\n    console.warn('Bubble is null, cannot show error:', message);\n    return;\n  }\n\n  const loadingEl = bubble.querySelector('.translation-loading') as HTMLDivElement;\n  const resultEl = bubble.querySelector('.translation-result') as HTMLDivElement;\n  const errorEl = bubble.querySelector('.bubble-error') as HTMLDivElement;\n  const errorMessageEl = bubble.querySelector('.error-message') as HTMLSpanElement;\n\n  // 检查所有必需的元素是否存在\n  if (!loadingEl || !resultEl || !errorEl || !errorMessageEl) {\n    console.warn('Required bubble elements not found');\n    return;\n  }\n\n  loadingEl.style.display = 'none';\n  resultEl.style.display = 'none';\n  errorMessageEl.textContent = message;\n  errorEl.style.display = 'block';\n}\n\n// 打开沉浸式模式\nfunction openImmersiveMode(text: string) {\n  if (isImmersiveMode) return;\n\n  isImmersiveMode = true;\n  translationBubble.hide();\n\n  // 创建沉浸式覆盖层\n  const overlay = document.createElement('div');\n  overlay.className = 'immersive-overlay';\n  overlay.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.8);\n    z-index: 2147483646;\n    pointer-events: auto;\n  `;\n\n  overlay.innerHTML = `\n    <div class=\"immersive-content\">\n      <div class=\"immersive-header\">\n        <h3>沉浸式翻译</h3>\n        <button class=\"btn-close\">✕</button>\n      </div>\n      <div class=\"immersive-body\">\n        <div class=\"original-panel\">\n          <h4>原文</h4>\n          <div class=\"text-content\">${escapeHtml(text)}</div>\n        </div>\n        <div class=\"translation-panel\">\n          <h4>译文</h4>\n          <div class=\"text-content loading\">翻译中...</div>\n        </div>\n      </div>\n      <div class=\"immersive-footer\">\n        <button class=\"btn-copy-all\">复制译文</button>\n        <button class=\"btn-replace-all\">替换页面文本</button>\n      </div>\n    </div>\n  `;\n\n  const shadow = createShadowContainer();\n  shadow.appendChild(overlay);\n\n  // 绑定事件\n  const closeBtn = overlay.querySelector('.btn-close') as HTMLButtonElement;\n  const copyAllBtn = overlay.querySelector('.btn-copy-all') as HTMLButtonElement;\n  const replaceAllBtn = overlay.querySelector('.btn-replace-all') as HTMLButtonElement;\n\n  closeBtn.addEventListener('click', () => {\n    overlay.remove();\n    isImmersiveMode = false;\n  });\n\n  // 开始翻译\n  translateText(text).then(result => {\n    const translationPanel = overlay.querySelector('.translation-panel .text-content') as HTMLDivElement;\n    if (result.ok && result.data) {\n      translationPanel.textContent = result.data.translatedText;\n      translationPanel.classList.remove('loading');\n\n      // 绑定复制和替换事件\n      copyAllBtn.addEventListener('click', () => {\n        navigator.clipboard.writeText(result.data!.translatedText).then(() => {\n          showToast('已复制到剪贴板');\n        });\n      });\n\n      replaceAllBtn.addEventListener('click', () => {\n        if (currentSelection && currentSelection.rangeCount > 0) {\n          const range = currentSelection.getRangeAt(0);\n          range.deleteContents();\n          range.insertNode(document.createTextNode(result.data!.translatedText));\n          currentSelection.removeAllRanges();\n        }\n        overlay.remove();\n        isImmersiveMode = false;\n        showToast('已替换原文');\n      });\n    } else {\n      translationPanel.textContent = '翻译失败：' + (result.error?.message || '未知错误');\n      translationPanel.classList.remove('loading');\n    }\n  });\n\n  // ESC 键关闭\n  const handleEscape = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      overlay.remove();\n      isImmersiveMode = false;\n      document.removeEventListener('keydown', handleEscape);\n    }\n  };\n  document.addEventListener('keydown', handleEscape);\n}\n\n// 显示提示消息\nfunction showToast(message: string) {\n  const shadow = createShadowContainer();\n  const toast = document.createElement('div');\n  toast.className = 'toast-message';\n  toast.textContent = message;\n  toast.style.cssText = `\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background: #333;\n    color: white;\n    padding: 12px 20px;\n    border-radius: 6px;\n    z-index: 10001;\n    pointer-events: auto;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  `;\n\n  shadow.appendChild(toast);\n\n  // 动画显示\n  requestAnimationFrame(() => {\n    toast.style.opacity = '1';\n  });\n\n  // 3秒后自动消失\n  setTimeout(() => {\n    toast.style.opacity = '0';\n    setTimeout(() => toast.remove(), 300);\n  }, 3000);\n}\n\n// HTML 转义\nfunction escapeHtml(text: string): string {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n// 获取选中文本和位置\nfunction getSelectionInfo(): { text: string; rect: DOMRect } | null {\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) return null;\n\n  const text = selection.toString().trim();\n  if (!text || text.length < 1 || text.length > 1000) return null;\n\n  const range = selection.getRangeAt(0);\n  const rect = range.getBoundingClientRect();\n\n  return { text, rect };\n}\n\n// 创建翻译气泡实例\nconst translationBubble = createTranslationBubble();\n\n// 事件监听器\ndocument.addEventListener('mouseup', () => {\n  // 延迟检查选择，确保选择已完成\n  setTimeout(() => {\n    const selectionInfo = getSelectionInfo();\n    if (selectionInfo) {\n      currentSelection = window.getSelection();\n      translationBubble.show(currentSelection!, selectionInfo.text, selectionInfo.rect);\n    } else if (!translationBubble.isVisible()) {\n      translationBubble.hide();\n    }\n  }, 100);\n});\n\n// 双击翻译\ndocument.addEventListener('dblclick', () => {\n  setTimeout(() => {\n    const selectionInfo = getSelectionInfo();\n    if (selectionInfo) {\n      currentSelection = window.getSelection();\n      translationBubble.show(currentSelection!, selectionInfo.text, selectionInfo.rect);\n    }\n  }, 100);\n});\n\n// 键盘快捷键\ndocument.addEventListener('keydown', (event) => {\n  // Esc 关闭气泡\n  if (event.key === 'Escape') {\n    translationBubble.hide();\n  }\n\n  // Ctrl+Shift+Y 开启沉浸式模式\n  if (event.ctrlKey && event.shiftKey && event.key === 'Y') {\n    event.preventDefault();\n    const selectionInfo = getSelectionInfo();\n    if (selectionInfo) {\n      currentSelection = window.getSelection();\n      openImmersiveMode(selectionInfo.text);\n    }\n  }\n});\n\n// 监听来自 Service Worker 的消息\nchrome.runtime.onMessage.addListener((message, _sender) => {\n  if (message.type === 'toggleImmersive') {\n    const selectionInfo = getSelectionInfo();\n    if (selectionInfo) {\n      currentSelection = window.getSelection();\n      openImmersiveMode(selectionInfo.text);\n    }\n  }\n});\n\nconsole.log('Immersive Translate Content Script loaded');"],"names":["isDragging"],"mappings":"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"}