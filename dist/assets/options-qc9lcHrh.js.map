{"version":3,"file":"options-qc9lcHrh.js","sources":["../../src/options/LoginComponent.tsx","../../src/options/RegisterComponent.tsx","../../src/options/AuthOptionsComponent.tsx","../../src/options/OptionsComponent.tsx","../../src/options/Options.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\nconst LoginComponent: React.FC = () => {\n  const [formData, setFormData] = useState<LoginFormData>({\n    username: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('http://localhost:8000/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: formData.password\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.detail || '登录失败');\n      }\n\n      console.log('登录成功:', data);\n      // 后续会在这里处理 token 存储\n    } catch (err: any) {\n      setError(err.message || '登录过程中发生错误');\n      console.error('登录错误:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n        <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900 dark:text-white\">\n          登录到您的账户\n        </h2>\n      </div>\n\n      <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n        <form className=\"space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"text-sm text-red-700\">\n                {error}\n              </div>\n            </div>\n          )}\n          \n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-white\">\n              用户名\n            </label>\n            <div className=\"mt-2\">\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                required\n                value={formData.username}\n                onChange={handleChange}\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 dark:bg-gray-700 dark:text-white dark:ring-gray-600 dark:focus:ring-indigo-500\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"flex items-center justify-between\">\n              <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-white\">\n                密码\n              </label>\n            </div>\n            <div className=\"mt-2\">\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                value={formData.password}\n                onChange={handleChange}\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 dark:bg-gray-700 dark:text-white dark:ring-gray-600 dark:focus:ring-indigo-500\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:opacity-50 dark:bg-indigo-600 dark:hover:bg-indigo-500\"\n            >\n              {loading ? '登录中...' : '登录'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;","import React, { useState } from 'react';\n\ninterface RegisterFormData {\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst RegisterComponent: React.FC = () => {\n  const [formData, setFormData] = useState<RegisterFormData>({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // 检查密码是否匹配\n    if (formData.password !== formData.confirmPassword) {\n      setError('密码和确认密码不匹配');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('http://localhost:8000/user/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: formData.password,\n          confirm_password: formData.confirmPassword\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.detail || '注册失败');\n      }\n\n      console.log('注册成功:', data);\n      // 后续会在这里处理注册成功后的逻辑\n    } catch (err: any) {\n      setError(err.message || '注册过程中发生错误');\n      console.error('注册错误:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n        <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900 dark:text-white\">\n          创建新账户\n        </h2>\n      </div>\n\n      <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n        <form className=\"space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"text-sm text-red-700\">\n                {error}\n              </div>\n            </div>\n          )}\n          \n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-white\">\n              用户名\n            </label>\n            <div className=\"mt-2\">\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                required\n                value={formData.username}\n                onChange={handleChange}\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 dark:bg-gray-700 dark:text-white dark:ring-gray-600 dark:focus:ring-indigo-500\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-white\">\n              密码\n            </label>\n            <div className=\"mt-2\">\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                value={formData.password}\n                onChange={handleChange}\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 dark:bg-gray-700 dark:text-white dark:ring-gray-600 dark:focus:ring-indigo-500\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium leading-6 text-gray-900 dark:text-white\">\n              确认密码\n            </label>\n            <div className=\"mt-2\">\n              <input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                required\n                value={formData.confirmPassword}\n                onChange={handleChange}\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 dark:bg-gray-700 dark:text-white dark:ring-gray-600 dark:focus:ring-indigo-500\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:opacity-50 dark:bg-indigo-600 dark:hover:bg-indigo-500\"\n            >\n              {loading ? '注册中...' : '注册'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterComponent;","import React, { useState } from 'react';\nimport LoginComponent from './LoginComponent';\nimport RegisterComponent from './RegisterComponent';\n\ntype View = 'settings' | 'login' | 'register';\n\ninterface AuthOptionsComponentProps {\n  onBackToSettings: () => void;\n}\n\nconst AuthOptionsComponent: React.FC<AuthOptionsComponentProps> = ({ onBackToSettings }) => {\n  const [currentView, setCurrentView] = useState<View>('login');\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* 头部导航 */}\n      <header className=\"bg-white dark:bg-gray-800 shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                {currentView === 'login' && '用户登录'}\n                {currentView === 'register' && '用户注册'}\n              </h1>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button \n                onClick={() => setCurrentView('login')}\n                className={`text-sm ${currentView === 'login' ? 'text-indigo-600 dark:text-indigo-400 font-medium' : 'text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'}`}\n              >\n                登录\n              </button>\n              <button \n                onClick={() => setCurrentView('register')}\n                className={`text-sm ${currentView === 'register' ? 'text-indigo-600 dark:text-indigo-400 font-medium' : 'text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'}`}\n              >\n                注册\n              </button>\n              <button \n                onClick={onBackToSettings}\n                className=\"text-sm text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n              >\n                返回设置\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {currentView === 'login' && <LoginComponent />}\n        {currentView === 'register' && <RegisterComponent />}\n      </main>\n    </div>\n  );\n};\n\nexport default AuthOptionsComponent;","/**\n * Options Component\n * 扩展设置页面主组件\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AuthOptionsComponent from './AuthOptionsComponent';\n\n// 类型定义\ninterface Settings {\n  defaultSourceLang: string;\n  defaultTargetLang: string;\n  enableAutoTranslate: boolean;\n  enableHotkey: boolean;\n  hotkey: string;\n  translationService: string;\n  apiKey: string;\n  theme: 'light' | 'dark' | 'auto';\n  fontSize: number;\n  showOriginalText: boolean;\n  enableSoundEffect: boolean;\n  enableImageTranslation: boolean; // 新增图片翻译设置项\n  enableDocumentTranslation: boolean; // 新增文件翻译设置项\n}\n\ninterface LanguageOption {\n  code: string;\n  name: string;\n}\n\n// 支持的语言列表\nconst LANGUAGES: LanguageOption[] = [\n  { code: 'auto', name: '自动检测' },\n  { code: 'zh', name: '中文' },\n  { code: 'en', name: 'English' },\n  { code: 'ja', name: '日本語' },\n  { code: 'ko', name: '한국어' },\n  { code: 'fr', name: 'Français' },\n  { code: 'de', name: 'Deutsch' },\n  { code: 'es', name: 'Español' },\n  { code: 'ru', name: 'Русский' },\n  { code: 'ar', name: 'العربية' }\n];\n\n// 翻译服务选项\nconst TRANSLATION_SERVICES = [\n  { value: 'google', name: 'Google 翻译' },\n  { value: 'deepl', name: 'DeepL' },\n  { value: 'microsoft', name: 'Microsoft 翻译' },\n  { value: 'baidu', name: '百度翻译' }\n];\n\n// 默认设置\nconst DEFAULT_SETTINGS: Settings = {\n  defaultSourceLang: 'auto',\n  defaultTargetLang: 'zh',\n  enableAutoTranslate: true,\n  enableHotkey: true,\n  hotkey: 'Ctrl+Shift+Y',\n  translationService: 'google',\n  apiKey: '',\n  theme: 'auto',\n  fontSize: 14,\n  showOriginalText: true,\n  enableSoundEffect: false,\n  enableImageTranslation: true, // 默认启用图片翻译\n  enableDocumentTranslation: true // 默认启用文件翻译\n};\n\nconst OptionsComponent: React.FC = () => {\n  // 状态管理\n  const [settings, setSettings] = useState<Settings>(DEFAULT_SETTINGS);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveMessage, setSaveMessage] = useState<string | null>(null);\n\n  // 添加认证视图状态\n  const [showAuth, setShowAuth] = useState(false);\n\n  // 加载设置\n  useEffect(() => {\n    chrome.storage.local.get(Object.keys(DEFAULT_SETTINGS), (result) => {\n      setSettings({ ...DEFAULT_SETTINGS, ...result });\n      setIsLoading(false);\n    });\n  }, []);\n\n  // 保存设置\n  const handleSave = useCallback(async () => {\n    setIsSaving(true);\n    setSaveMessage(null);\n\n    try {\n      await new Promise<void>((resolve) => {\n        chrome.storage.local.set(settings, () => {\n          resolve();\n        });\n      });\n\n      setSaveMessage('设置已保存');\n      setTimeout(() => setSaveMessage(null), 3000);\n    } catch (error) {\n      setSaveMessage('保存失败，请重试');\n      setTimeout(() => setSaveMessage(null), 3000);\n    } finally {\n      setIsSaving(false);\n    }\n  }, [settings]);\n\n  // 重置设置\n  const handleReset = useCallback(() => {\n    if (confirm('确定要重置所有设置吗？此操作不可撤销。')) {\n      setSettings(DEFAULT_SETTINGS);\n    }\n  }, []);\n\n  // 更新设置\n  const updateSetting = useCallback(<K extends keyof Settings>(\n    key: K,\n    value: Settings[K]\n  ) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  }, []);\n\n  // 导出设置\n  const handleExport = useCallback(() => {\n    const dataStr = JSON.stringify(settings, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(dataBlob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'immersive-translate-settings.json';\n    link.click();\n    \n    URL.revokeObjectURL(url);\n  }, [settings]);\n\n  // 导入设置\n  const handleImport = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedSettings = JSON.parse(e.target?.result as string);\n        setSettings({ ...DEFAULT_SETTINGS, ...importedSettings });\n        setSaveMessage('设置已导入');\n        setTimeout(() => setSaveMessage(null), 3000);\n      } catch (error) {\n        setSaveMessage('导入失败，文件格式不正确');\n        setTimeout(() => setSaveMessage(null), 3000);\n      }\n    };\n    reader.readAsText(file);\n    \n    // 清空文件输入\n    event.target.value = '';\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">加载设置中...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {showAuth ? (\n        <AuthOptionsComponent onBackToSettings={() => setShowAuth(false)} />\n      ) : (\n        <div className=\"min-h-screen bg-gray-50\">\n          {/* 在头部添加认证按钮 */}\n          <header className=\"bg-white shadow-sm border-b\">\n            <div className=\"max-w-4xl mx-auto px-6 py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-900\">沉浸式翻译设置</h1>\n                  <p className=\"text-gray-600 mt-1\">配置您的翻译偏好和功能选项</p>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <button\n                    onClick={() => setShowAuth(true)}\n                    className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition-colors\"\n                    type=\"button\"\n                  >\n                    用户账户\n                  </button>\n                  {saveMessage && (\n                    <span className={`text-sm px-3 py-1 rounded ${\n                      saveMessage.includes('失败') \n                        ? 'bg-red-100 text-red-700' \n                        : 'bg-green-100 text-green-700'\n                    }`}>\n                      {saveMessage}\n                    </span>\n                  )}\n                  <button\n                    onClick={handleSave}\n                    disabled={isSaving}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400 transition-colors\"\n                    type=\"button\"\n                  >\n                    {isSaving ? '保存中...' : '保存设置'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          {/* 主内容 */}\n          <main className=\"max-w-4xl mx-auto px-6 py-8\">\n            <div className=\"space-y-8\">\n              {/* 基本设置 */}\n              <section className=\"bg-white rounded-lg shadow-sm p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">基本设置</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      默认源语言\n                    </label>\n                    <select\n                      value={settings.defaultSourceLang}\n                      onChange={(e) => updateSetting('defaultSourceLang', e.target.value)}\n                      className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    >\n                      {LANGUAGES.map(lang => (\n                        <option key={lang.code} value={lang.code}>\n                          {lang.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      默认目标语言\n                    </label>\n                    <select\n                      value={settings.defaultTargetLang}\n                      onChange={(e) => updateSetting('defaultTargetLang', e.target.value)}\n                      className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    >\n                      {LANGUAGES.filter(lang => lang.code !== 'auto').map(lang => (\n                        <option key={lang.code} value={lang.code}>\n                          {lang.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      翻译服务\n                    </label>\n                    <select\n                      value={settings.translationService}\n                      onChange={(e) => updateSetting('translationService', e.target.value)}\n                      className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    >\n                      {TRANSLATION_SERVICES.map(service => (\n                        <option key={service.value} value={service.value}>\n                          {service.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      API 密钥 (可选)\n                    </label>\n                    <input\n                      type=\"password\"\n                      value={settings.apiKey}\n                      onChange={(e) => updateSetting('apiKey', e.target.value)}\n                      placeholder=\"输入 API 密钥以提高翻译质量\"\n                      className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    />\n                  </div>\n                </div>\n              </section>\n\n              {/* 功能设置 */}\n              <section className=\"bg-white rounded-lg shadow-sm p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">功能设置</h2>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">自动翻译</h3>\n                      <p className=\"text-sm text-gray-500\">选中文本时自动显示翻译</p>\n                    </div>\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={settings.enableAutoTranslate}\n                        onChange={(e) => updateSetting('enableAutoTranslate', e.target.checked)}\n                        className=\"sr-only peer\"\n                      />\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                    </label>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">快捷键</h3>\n                      <p className=\"text-sm text-gray-500\">启用键盘快捷键功能</p>\n                    </div>\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={settings.enableHotkey}\n                        onChange={(e) => updateSetting('enableHotkey', e.target.checked)}\n                        className=\"sr-only peer\"\n                      />\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                    </label>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">显示原文</h3>\n                      <p className=\"text-sm text-gray-500\">在翻译结果中显示原文</p>\n                    </div>\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={settings.showOriginalText}\n                        onChange={(e) => updateSetting('showOriginalText', e.target.checked)}\n                        className=\"sr-only peer\"\n                      />\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-500 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n                    </label>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">音效</h3>\n                      <p className=\"text-sm text-gray-500\">启用翻译完成音效</p>\n                    </div>\n                    <button\n                      onClick={() => updateSetting('enableSoundEffect', !settings.enableSoundEffect)}\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                        settings.enableSoundEffect ? 'bg-blue-600' : 'bg-gray-200'\n                      }`}\n                      type=\"button\"\n                    >\n                      <span\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                          settings.enableSoundEffect ? 'translate-x-6' : 'translate-x-1'\n                        }`}\n                      />\n                    </button>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">图片翻译</h3>\n                      <p className=\"text-sm text-gray-500\">启用图片翻译功能</p>\n                    </div>\n                    <button\n                      onClick={() => updateSetting('enableImageTranslation', !settings.enableImageTranslation)}\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                        settings.enableImageTranslation ? 'bg-blue-600' : 'bg-gray-200'\n                      }`}\n                      type=\"button\"\n                    >\n                      <span\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                          settings.enableImageTranslation ? 'translate-x-6' : 'translate-x-1'\n                        }`}\n                      />\n                    </button>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">文件翻译</h3>\n                      <p className=\"text-sm text-gray-500\">启用文档翻译功能（PDF/TXT/Docx）</p>\n                    </div>\n                    <button\n                      onClick={() => updateSetting('enableDocumentTranslation', !settings.enableDocumentTranslation)}\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                        settings.enableDocumentTranslation ? 'bg-blue-600' : 'bg-gray-200'\n                      }`}\n                      type=\"button\"\n                    >\n                      <span\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                          settings.enableDocumentTranslation ? 'translate-x-6' : 'translate-x-1'\n                        }`}\n                      />\n                    </button>\n                  </div>\n\n                </div>\n              </section>\n\n              {/* 外观设置 */}\n              <section className=\"bg-white rounded-lg shadow-sm p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">外观设置</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      主题\n                    </label>\n                    <select\n                      value={settings.theme}\n                      onChange={(e) => updateSetting('theme', e.target.value as 'light' | 'dark' | 'auto')}\n                      className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    >\n                      <option value=\"auto\">跟随系统</option>\n                      <option value=\"light\">浅色</option>\n                      <option value=\"dark\">深色</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      字体大小: {settings.fontSize}px\n                    </label>\n                    <input\n                      type=\"range\"\n                      min=\"12\"\n                      max=\"20\"\n                      value={settings.fontSize}\n                      onChange={(e) => updateSetting('fontSize', parseInt(e.target.value))}\n                      className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                    />\n                  </div>\n                </div>\n              </section>\n\n              {/* 数据管理 */}\n              <section className=\"bg-white rounded-lg shadow-sm p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">数据管理</h2>\n                <div className=\"flex flex-wrap gap-4\">\n                  <button\n                    onClick={handleExport}\n                    className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\n                    type=\"button\"\n                  >\n                    导出设置\n                  </button>\n                  \n                  <label className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors cursor-pointer\">\n                    导入设置\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={handleImport}\n                      className=\"hidden\"\n                    />\n                  </label>\n                  \n                  <button\n                    onClick={handleReset}\n                    className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n                    type=\"button\"\n                  >\n                    重置设置\n                  </button>\n                </div>\n              </section>\n            </div>\n          </main>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptionsComponent;","/**\n * Options Page Entry Point\n * React 应用入口文件\n */\n\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport OptionsComponent from './OptionsComponent';\nimport '../styles/tailwind.css'; // Tailwind CSS 样式\n\n// 创建 React 根节点并渲染应用\nconst container = document.getElementById('options-root');\nif (container) {\n  const root = createRoot(container);\n  root.render(<OptionsComponent />);\n} else {\n  console.error('Options root element not found');\n}"],"names":["useState","jsxs","jsx","useEffect","useCallback"],"mappings":"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"}