{"version":3,"file":"popup-DaO6k4nj.js","sources":["../../src/popup/Popup.tsx","../../src/popup/index.tsx"],"sourcesContent":["/**\n * Popup Component\n * 扩展弹窗主组件\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// 类型定义\ninterface TranslationResult {\n  ok: boolean;\n  data?: {\n    translatedText: string;\n    detectedLanguage?: string;\n    alternatives?: string[];\n  };\n  error?: {\n    code: string;\n    message: string;\n  };\n}\n\ninterface LanguageOption {\n  code: string;\n  name: string;\n}\n\n// 支持的语言列表\nconst LANGUAGES: LanguageOption[] = [\n  { code: 'auto', name: '自动检测' },\n  { code: 'zh', name: '中文' },\n  { code: 'en', name: 'English' },\n  { code: 'ja', name: '日本語' },\n  { code: 'ko', name: '한국어' },\n  { code: 'fr', name: 'Français' },\n  { code: 'de', name: 'Deutsch' },\n  { code: 'es', name: 'Español' },\n  { code: 'ru', name: 'Русский' },\n  { code: 'ar', name: 'العربية' }\n];\n\n// 支持的模型列表\nconst MODELS = [\n  { value: 'deepseek-chat', name: 'DeepSeek（deepseek-chat）' },\n  { value: 'qwen-turbo-latest', name: '阿里云百炼（qwen-turbo-latest）' },\n  { value: 'gpt-4o', name: 'OpenAI（gpt-4o）' },\n  { value: 'kimi-k2-0711-preview', name: 'Moonshot Kimi（kimi-k2-0711-preview）' }\n];\n\n// AI身份描述\nconst IDENTITY_DESCRIPTIONS: Record<string, string> = {\n  \"通用专家\": \"你是一个通用领域的翻译专家，擅长各种类型的文本翻译。\",\n  \"学术论文翻译师\": \"你是一个专业的学术论文翻译师，擅长将学术术语的文本准确翻译成目标语言，保持学术术语的准确性和语言的严谨性。\",\n  \"意译长官\": \"你是一个专业的意译长官，擅长在翻译过程中保持原文的语境和风味，使译文更符合目标语言的文化背景和表达习惯。\",\n  \"程序专家\": \"你是一个专业的程序专家，擅长翻译与编程、软件开发相关的技术文档，能够准确处理技术术语和代码注释。\",\n  \"古今中外翻译师\": \"你是一个多语言自，阅读过古今中外名著的翻译专家，擅长将不同语言的文本翻译成目标语言，并熟悉中国汉语和中世纪英语或是拉丁语。\"\n};\n\n// AI身份选项\nconst IDENTITY_OPTIONS = Object.keys(IDENTITY_DESCRIPTIONS).map(key => ({\n  value: key,\n  label: key\n}));\n\nconst Popup: React.FC = () => {\n  // 状态管理\n  const [inputText, setInputText] = useState('');\n  const [translatedText, setTranslatedText] = useState('');\n  const [sourceLang, setSourceLang] = useState('auto');\n  const [targetLang, setTargetLang] = useState('zh');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [alternatives, setAlternatives] = useState<string[]>([]);\n  const [selectedModel, setSelectedModel] = useState('gpt-4o'); // 默认选择OpenAI模型\n  const [selectedIdentity, setSelectedIdentity] = useState('通用专家'); // 默认选择通用专家\n\n  // 从存储加载设置\n  useEffect(() => {\n    chrome.storage.local.get(['defaultSourceLang', 'defaultTargetLang'], (result) => {\n      if (result.defaultSourceLang) setSourceLang(result.defaultSourceLang);\n      if (result.defaultTargetLang) setTargetLang(result.defaultTargetLang);\n    });\n  }, []);\n\n  // 保存语言设置\n  const saveLanguageSettings = useCallback(() => {\n    chrome.storage.local.set({\n      defaultSourceLang: sourceLang,\n      defaultTargetLang: targetLang\n    });\n  }, [sourceLang, targetLang]);\n\n  // 翻译函数\n  const handleTranslate = useCallback(async () => {\n    if (!inputText.trim()) return;\n\n    setIsLoading(true);\n    setError(null);\n    setTranslatedText('');\n    setAlternatives([]);\n\n    try {\n      const response = await new Promise<TranslationResult>((resolve) => {\n        chrome.runtime.sendMessage({\n          type: 'translate',\n          payload: {\n            id: Date.now().toString(),\n            text: inputText.trim(),\n            source: sourceLang,\n            target: targetLang,\n            format: 'text'\n          }\n        }, resolve);\n      });\n\n      if (response.ok && response.data) {\n        setTranslatedText(response.data.translatedText);\n        setAlternatives(response.data.alternatives || []);\n        \n        // 保存到翻译历史\n        chrome.storage.local.get(['translationHistory'], (result) => {\n          const history = result.translationHistory || [];\n          history.unshift({\n            original: inputText.trim(),\n            translated: response.data!.translatedText,\n            sourceLang,\n            targetLang,\n            timestamp: Date.now()\n          });\n          \n          // 只保留最近50条记录\n          chrome.storage.local.set({\n            translationHistory: history.slice(0, 50)\n          });\n        });\n      } else {\n        setError(response.error?.message || '翻译失败');\n      }\n    } catch (err) {\n      setError('网络连接失败');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [inputText, sourceLang, targetLang]);\n\n  // 交换语言\n  const handleSwapLanguages = useCallback(() => {\n    if (sourceLang === 'auto') {\n      setSourceLang(targetLang);\n      setTargetLang('en');\n    } else {\n      const temp = sourceLang;\n      setSourceLang(targetLang);\n      setTargetLang(temp);\n    }\n    saveLanguageSettings();\n  }, [sourceLang, targetLang, saveLanguageSettings]);\n\n  // 复制翻译结果\n  const handleCopy = useCallback(() => {\n    if (translatedText) {\n      navigator.clipboard.writeText(translatedText);\n    }\n  }, [translatedText]);\n\n  // 清空输入\n  const handleClear = useCallback(() => {\n    setInputText('');\n    setTranslatedText('');\n    setError(null);\n    setAlternatives([]);\n  }, []);\n\n  // 打开设置页面\n  const handleOpenSettings = useCallback(() => {\n    chrome.runtime.openOptionsPage();\n  }, []);\n\n  // 键盘快捷键\n  const handleKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (event.ctrlKey && event.key === 'Enter') {\n      event.preventDefault();\n      handleTranslate();\n    }\n  }, [handleTranslate]);\n\n  // 语言变化处理\n  useEffect(() => {\n    saveLanguageSettings();\n  }, [saveLanguageSettings]);\n\n  return (\n    <div className=\"w-96 min-h-[500px] bg-white\">\n      {/* 头部 */}\n      <header className=\"bg-blue-600 text-white p-4 flex items-center justify-between\">\n        <h1 className=\"text-lg font-semibold\">沉浸式翻译</h1>\n        <button\n          onClick={handleOpenSettings}\n          className=\"p-2 hover:bg-blue-700 rounded transition-colors\"\n          title=\"打开设置页面\"\n          aria-label=\"打开设置页面\"\n          type=\"button\"\n        >\n          ⚙️\n        </button>\n      </header>\n\n      {/* 主内容 */}\n      <main className=\"p-4 space-y-4\">\n        {/* 模型选择 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            翻译模型\n          </label>\n          <select\n            value={selectedModel}\n            onChange={(e) => setSelectedModel(e.target.value)}\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            aria-label=\"翻译模型\"\n          >\n            {MODELS.map(model => (\n              <option key={model.value} value={model.value}>\n                {model.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* AI身份选择 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            AI身份\n          </label>\n          <select\n            value={selectedIdentity}\n            onChange={(e) => setSelectedIdentity(e.target.value)}\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            aria-label=\"AI身份\"\n          >\n            {IDENTITY_OPTIONS.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* 语言选择 */}\n        <div className=\"flex items-center space-x-2\">\n          <select\n            value={sourceLang}\n            onChange={(e) => setSourceLang(e.target.value)}\n            className=\"flex-1 p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            aria-label=\"源语言\"\n          >\n            {LANGUAGES.map(lang => (\n              <option key={lang.code} value={lang.code}>\n                {lang.name}\n              </option>\n            ))}\n          </select>\n          \n          <button\n            onClick={handleSwapLanguages}\n            className=\"p-2 text-gray-600 hover:text-blue-600 transition-colors\"\n            title=\"交换语言\"\n            type=\"button\"\n          >\n            ⇄\n          </button>\n          \n          <select\n            value={targetLang}\n            onChange={(e) => setTargetLang(e.target.value)}\n            className=\"flex-1 p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            aria-label=\"目标语言\"\n          >\n            {LANGUAGES.filter(lang => lang.code !== 'auto').map(lang => (\n              <option key={lang.code} value={lang.code}>\n                {lang.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* 输入区域 */}\n        <div className=\"relative\">\n          <textarea\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyDown={handleKeyDown}\n            placeholder=\"输入要翻译的文本...\"\n            className=\"w-full h-32 p-3 border border-gray-300 rounded resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            maxLength={1000}\n          />\n          <div className=\"absolute bottom-2 right-2 flex items-center space-x-2\">\n            <span className=\"text-xs text-gray-500\">\n              {inputText.length}/1000\n            </span>\n            {inputText && (\n              <button\n                onClick={handleClear}\n                className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                title=\"清空输入\"\n                type=\"button\"\n              >\n                ✕\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* 翻译按钮 */}\n        <button\n          onClick={handleTranslate}\n          disabled={!inputText.trim() || isLoading}\n          className=\"w-full py-3 bg-blue-600 text-white rounded font-medium hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\n          type=\"button\"\n        >\n          {isLoading ? '翻译中...' : '翻译'}\n        </button>\n\n        {/* 错误信息 */}\n        {error && (\n          <div className=\"p-3 bg-red-50 border border-red-200 rounded text-red-700\">\n            ❌ {error}\n          </div>\n        )}\n\n        {/* 翻译结果 */}\n        {translatedText && (\n          <div className=\"space-y-3\">\n            <div className=\"relative p-3 bg-gray-50 border border-gray-200 rounded\">\n              <div className=\"text-gray-800 leading-relaxed\">\n                {translatedText}\n              </div>\n              <button\n                onClick={handleCopy}\n                className=\"absolute top-2 right-2 p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n                title=\"复制翻译结果\"\n                type=\"button\"\n              >\n                📋\n              </button>\n            </div>\n\n            {/* 候选翻译 */}\n            {alternatives.length > 0 && (\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-gray-700\">其他翻译:</h4>\n                {alternatives.map((alt, index) => (\n                  <div\n                    key={index}\n                    className=\"p-2 bg-white border border-gray-200 rounded text-sm text-gray-600 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() => setTranslatedText(alt)}\n                  >\n                    {alt}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </main>\n\n      {/* 底部提示 */}\n      <footer className=\"p-4 border-t border-gray-200 text-xs text-gray-500 text-center\">\n        快捷键: Ctrl+Enter 翻译\n      </footer>\n    </div>\n  );\n};\n\nexport default Popup;","/**\n * Popup Entry Point\n * React 应用入口文件\n */\n\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Popup from './Popup';\nimport '../styles/tailwind.css'; // Tailwind CSS 样式\n\n// 创建 React 根节点并渲染应用\nconst container = document.getElementById('popup-root');\nif (container) {\n  const root = createRoot(container);\n  root.render(<Popup />);\n} else {\n  console.error('Popup root element not found');\n}"],"names":["useState","useEffect","useCallback","jsxs","jsx"],"mappings":"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"}