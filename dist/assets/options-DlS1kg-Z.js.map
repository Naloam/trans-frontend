{"version":3,"file":"options-DlS1kg-Z.js","sources":["../../src/options/OptionsComponent.tsx","../../src/options/Options.tsx"],"sourcesContent":["/**\r\n * Options Component\r\n * 扩展设置页面主组件\r\n */\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\n\r\n// 类型定义\r\ninterface Settings {\r\n  defaultSourceLang: string;\r\n  defaultTargetLang: string;\r\n  enableAutoTranslate: boolean;\r\n  enableHotkey: boolean;\r\n  hotkey: string;\r\n  translationService: string;\r\n  apiKey: string;\r\n  theme: 'light' | 'dark' | 'auto';\r\n  fontSize: number;\r\n  showOriginalText: boolean;\r\n  enableSoundEffect: boolean;\r\n}\r\n\r\ninterface LanguageOption {\r\n  code: string;\r\n  name: string;\r\n}\r\n\r\n// 支持的语言列表\r\nconst LANGUAGES: LanguageOption[] = [\r\n  { code: 'auto', name: '自动检测' },\r\n  { code: 'zh', name: '中文' },\r\n  { code: 'en', name: 'English' },\r\n  { code: 'ja', name: '日本語' },\r\n  { code: 'ko', name: '한국어' },\r\n  { code: 'fr', name: 'Français' },\r\n  { code: 'de', name: 'Deutsch' },\r\n  { code: 'es', name: 'Español' },\r\n  { code: 'ru', name: 'Русский' },\r\n  { code: 'ar', name: 'العربية' }\r\n];\r\n\r\n// 翻译服务选项\r\nconst TRANSLATION_SERVICES = [\r\n  { value: 'google', name: 'Google 翻译' },\r\n  { value: 'deepl', name: 'DeepL' },\r\n  { value: 'microsoft', name: 'Microsoft 翻译' },\r\n  { value: 'baidu', name: '百度翻译' }\r\n];\r\n\r\n// 默认设置\r\nconst DEFAULT_SETTINGS: Settings = {\r\n  defaultSourceLang: 'auto',\r\n  defaultTargetLang: 'zh',\r\n  enableAutoTranslate: true,\r\n  enableHotkey: true,\r\n  hotkey: 'Ctrl+Shift+Y',\r\n  translationService: 'google',\r\n  apiKey: '',\r\n  theme: 'auto',\r\n  fontSize: 14,\r\n  showOriginalText: true,\r\n  enableSoundEffect: false\r\n};\r\n\r\nconst OptionsComponent: React.FC = () => {\r\n  // 状态管理\r\n  const [settings, setSettings] = useState<Settings>(DEFAULT_SETTINGS);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [saveMessage, setSaveMessage] = useState<string | null>(null);\r\n\r\n  // 加载设置\r\n  useEffect(() => {\r\n    chrome.storage.local.get(Object.keys(DEFAULT_SETTINGS), (result) => {\r\n      setSettings({ ...DEFAULT_SETTINGS, ...result });\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  // 保存设置\r\n  const handleSave = useCallback(async () => {\r\n    setIsSaving(true);\r\n    setSaveMessage(null);\r\n\r\n    try {\r\n      await new Promise<void>((resolve) => {\r\n        chrome.storage.local.set(settings, () => {\r\n          resolve();\r\n        });\r\n      });\r\n\r\n      setSaveMessage('设置已保存');\r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n    } catch (error) {\r\n      setSaveMessage('保存失败，请重试');\r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  }, [settings]);\r\n\r\n  // 重置设置\r\n  const handleReset = useCallback(() => {\r\n    if (confirm('确定要重置所有设置吗？此操作不可撤销。')) {\r\n      setSettings(DEFAULT_SETTINGS);\r\n    }\r\n  }, []);\r\n\r\n  // 更新设置\r\n  const updateSetting = useCallback(<K extends keyof Settings>(\r\n    key: K,\r\n    value: Settings[K]\r\n  ) => {\r\n    setSettings(prev => ({ ...prev, [key]: value }));\r\n  }, []);\r\n\r\n  // 导出设置\r\n  const handleExport = useCallback(() => {\r\n    const dataStr = JSON.stringify(settings, null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'immersive-translate-settings.json';\r\n    link.click();\r\n    \r\n    URL.revokeObjectURL(url);\r\n  }, [settings]);\r\n\r\n  // 导入设置\r\n  const handleImport = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const importedSettings = JSON.parse(e.target?.result as string);\r\n        setSettings({ ...DEFAULT_SETTINGS, ...importedSettings });\r\n        setSaveMessage('设置已导入');\r\n        setTimeout(() => setSaveMessage(null), 3000);\r\n      } catch (error) {\r\n        setSaveMessage('导入失败，文件格式不正确');\r\n        setTimeout(() => setSaveMessage(null), 3000);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n    \r\n    // 清空文件输入\r\n    event.target.value = '';\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">加载设置中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* 头部 */}\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-4xl mx-auto px-6 py-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">沉浸式翻译设置</h1>\r\n              <p className=\"text-gray-600 mt-1\">配置您的翻译偏好和功能选项</p>\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              {saveMessage && (\r\n                <span className={`text-sm px-3 py-1 rounded ${\r\n                  saveMessage.includes('失败') \r\n                    ? 'bg-red-100 text-red-700' \r\n                    : 'bg-green-100 text-green-700'\r\n                }`}>\r\n                  {saveMessage}\r\n                </span>\r\n              )}\r\n              <button\r\n                onClick={handleSave}\r\n                disabled={isSaving}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400 transition-colors\"\r\n                type=\"button\"\r\n              >\r\n                {isSaving ? '保存中...' : '保存设置'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* 主内容 */}\r\n      <main className=\"max-w-4xl mx-auto px-6 py-8\">\r\n        <div className=\"space-y-8\">\r\n          {/* 基本设置 */}\r\n          <section className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">基本设置</h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  默认源语言\r\n                </label>\r\n                <select\r\n                  value={settings.defaultSourceLang}\r\n                  onChange={(e) => updateSetting('defaultSourceLang', e.target.value)}\r\n                  className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  {LANGUAGES.map(lang => (\r\n                    <option key={lang.code} value={lang.code}>\r\n                      {lang.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  默认目标语言\r\n                </label>\r\n                <select\r\n                  value={settings.defaultTargetLang}\r\n                  onChange={(e) => updateSetting('defaultTargetLang', e.target.value)}\r\n                  className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  {LANGUAGES.filter(lang => lang.code !== 'auto').map(lang => (\r\n                    <option key={lang.code} value={lang.code}>\r\n                      {lang.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  翻译服务\r\n                </label>\r\n                <select\r\n                  value={settings.translationService}\r\n                  onChange={(e) => updateSetting('translationService', e.target.value)}\r\n                  className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  {TRANSLATION_SERVICES.map(service => (\r\n                    <option key={service.value} value={service.value}>\r\n                      {service.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  API 密钥 (可选)\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={settings.apiKey}\r\n                  onChange={(e) => updateSetting('apiKey', e.target.value)}\r\n                  placeholder=\"输入 API 密钥以提高翻译质量\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 功能设置 */}\r\n          <section className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">功能设置</h2>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium text-gray-900\">自动翻译</h3>\r\n                  <p className=\"text-sm text-gray-500\">选中文本时自动显示翻译</p>\r\n                </div>\r\n                <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={settings.enableAutoTranslate}\r\n                    onChange={(e) => updateSetting('enableAutoTranslate', e.target.checked)}\r\n                    className=\"sr-only peer\"\r\n                  />\r\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium text-gray-900\">快捷键</h3>\r\n                  <p className=\"text-sm text-gray-500\">启用键盘快捷键功能</p>\r\n                </div>\r\n                <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={settings.enableHotkey}\r\n                    onChange={(e) => updateSetting('enableHotkey', e.target.checked)}\r\n                    className=\"sr-only peer\"\r\n                  />\r\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium text-gray-900\">显示原文</h3>\r\n                  <p className=\"text-sm text-gray-500\">在翻译结果中显示原文</p>\r\n                </div>\r\n                <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={settings.showOriginalText}\r\n                    onChange={(e) => updateSetting('showOriginalText', e.target.checked)}\r\n                    className=\"sr-only peer\"\r\n                  />\r\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium text-gray-900\">音效提示</h3>\r\n                  <p className=\"text-sm text-gray-500\">翻译完成时播放提示音</p>\r\n                </div>\r\n                <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={settings.enableSoundEffect}\r\n                    onChange={(e) => updateSetting('enableSoundEffect', e.target.checked)}\r\n                    className=\"sr-only peer\"\r\n                  />\r\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 外观设置 */}\r\n          <section className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">外观设置</h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  主题\r\n                </label>\r\n                <select\r\n                  value={settings.theme}\r\n                  onChange={(e) => updateSetting('theme', e.target.value as 'light' | 'dark' | 'auto')}\r\n                  className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"auto\">跟随系统</option>\r\n                  <option value=\"light\">浅色</option>\r\n                  <option value=\"dark\">深色</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  字体大小: {settings.fontSize}px\r\n                </label>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"12\"\r\n                  max=\"20\"\r\n                  value={settings.fontSize}\r\n                  onChange={(e) => updateSetting('fontSize', parseInt(e.target.value))}\r\n                  className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 数据管理 */}\r\n          <section className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">数据管理</h2>\r\n            <div className=\"flex flex-wrap gap-4\">\r\n              <button\r\n                onClick={handleExport}\r\n                className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\r\n                type=\"button\"\r\n              >\r\n                导出设置\r\n              </button>\r\n              \r\n              <label className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors cursor-pointer\">\r\n                导入设置\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".json\"\r\n                  onChange={handleImport}\r\n                  className=\"hidden\"\r\n                />\r\n              </label>\r\n              \r\n              <button\r\n                onClick={handleReset}\r\n                className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                type=\"button\"\r\n              >\r\n                重置设置\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionsComponent;","/**\r\n * Options Page Entry Point\r\n * React 应用入口文件\r\n */\r\n\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport OptionsComponent from './OptionsComponent';\r\nimport '../styles/tailwind.css'; // Tailwind CSS 样式\r\n\r\n// 创建 React 根节点并渲染应用\r\nconst container = document.getElementById('options-root');\r\nif (container) {\r\n  const root = createRoot(container);\r\n  root.render(<OptionsComponent />);\r\n} else {\r\n  console.error('Options root element not found');\r\n}"],"names":["useState","useEffect","useCallback","jsxs","jsx"],"mappings":";AA4BA,MAAM,YAA8B;AAAA,EAClC,EAAE,MAAM,QAAQ,MAAM,OAAA;AAAA,EACtB,EAAE,MAAM,MAAM,MAAM,KAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,UAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,MAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,MAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,WAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,UAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,UAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,UAAA;AAAA,EACpB,EAAE,MAAM,MAAM,MAAM,UAAA;AACtB;AAGA,MAAM,uBAAuB;AAAA,EAC3B,EAAE,OAAO,UAAU,MAAM,YAAA;AAAA,EACzB,EAAE,OAAO,SAAS,MAAM,QAAA;AAAA,EACxB,EAAE,OAAO,aAAa,MAAM,eAAA;AAAA,EAC5B,EAAE,OAAO,SAAS,MAAM,OAAA;AAC1B;AAGA,MAAM,mBAA6B;AAAA,EACjC,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,qBAAqB;AAAA,EACrB,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,oBAAoB;AAAA,EACpB,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,UAAU;AAAA,EACV,kBAAkB;AAAA,EAClB,mBAAmB;AACrB;AAEA,MAAM,mBAA6B,MAAM;AAEvC,QAAM,CAAC,UAAU,WAAW,IAAIA,aAAAA,SAAmB,gBAAgB;AACnE,QAAM,CAAC,WAAW,YAAY,IAAIA,aAAAA,SAAS,IAAI;AAC/C,QAAM,CAAC,UAAU,WAAW,IAAIA,aAAAA,SAAS,KAAK;AAC9C,QAAM,CAAC,aAAa,cAAc,IAAIA,aAAAA,SAAwB,IAAI;AAGlEC,eAAAA,UAAU,MAAM;AACd,WAAO,QAAQ,MAAM,IAAI,OAAO,KAAK,gBAAgB,GAAG,CAAC,WAAW;AAClE,kBAAY,EAAE,GAAG,kBAAkB,GAAG,QAAQ;AAC9C,mBAAa,KAAK;AAAA,IACpB,CAAC;AAAA,EACH,GAAG,CAAA,CAAE;AAGL,QAAM,aAAaC,aAAAA,YAAY,YAAY;AACzC,gBAAY,IAAI;AAChB,mBAAe,IAAI;AAEnB,QAAI;AACF,YAAM,IAAI,QAAc,CAAC,YAAY;AACnC,eAAO,QAAQ,MAAM,IAAI,UAAU,MAAM;AACvC,kBAAA;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAED,qBAAe,OAAO;AACtB,iBAAW,MAAM,eAAe,IAAI,GAAG,GAAI;AAAA,IAC7C,SAAS,OAAO;AACd,qBAAe,UAAU;AACzB,iBAAW,MAAM,eAAe,IAAI,GAAG,GAAI;AAAA,IAC7C,UAAA;AACE,kBAAY,KAAK;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,QAAQ,CAAC;AAGb,QAAM,cAAcA,aAAAA,YAAY,MAAM;AACpC,QAAI,QAAQ,qBAAqB,GAAG;AAClC,kBAAY,gBAAgB;AAAA,IAC9B;AAAA,EACF,GAAG,CAAA,CAAE;AAGL,QAAM,gBAAgBA,aAAAA,YAAY,CAChC,KACA,UACG;AACH,gBAAY,CAAA,UAAS,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,QAAQ;AAAA,EACjD,GAAG,CAAA,CAAE;AAGL,QAAM,eAAeA,aAAAA,YAAY,MAAM;AACrC,UAAM,UAAU,KAAK,UAAU,UAAU,MAAM,CAAC;AAChD,UAAM,WAAW,IAAI,KAAK,CAAC,OAAO,GAAG,EAAE,MAAM,oBAAoB;AACjE,UAAM,MAAM,IAAI,gBAAgB,QAAQ;AAExC,UAAM,OAAO,SAAS,cAAc,GAAG;AACvC,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,MAAA;AAEL,QAAI,gBAAgB,GAAG;AAAA,EACzB,GAAG,CAAC,QAAQ,CAAC;AAGb,QAAM,eAAeA,yBAAY,CAAC,UAA+C;AAC/E,UAAM,OAAO,MAAM,OAAO,QAAQ,CAAC;AACnC,QAAI,CAAC,KAAM;AAEX,UAAM,SAAS,IAAI,WAAA;AACnB,WAAO,SAAS,CAAC,MAAM;AACrB,UAAI;AACF,cAAM,mBAAmB,KAAK,MAAM,EAAE,QAAQ,MAAgB;AAC9D,oBAAY,EAAE,GAAG,kBAAkB,GAAG,kBAAkB;AACxD,uBAAe,OAAO;AACtB,mBAAW,MAAM,eAAe,IAAI,GAAG,GAAI;AAAA,MAC7C,SAAS,OAAO;AACd,uBAAe,cAAc;AAC7B,mBAAW,MAAM,eAAe,IAAI,GAAG,GAAI;AAAA,MAC7C;AAAA,IACF;AACA,WAAO,WAAW,IAAI;AAGtB,UAAM,OAAO,QAAQ;AAAA,EACvB,GAAG,CAAA,CAAE;AAEL,MAAI,WAAW;AACb,iDACG,OAAA,EAAI,WAAU,4DACb,UAAAC,kCAAAA,KAAC,OAAA,EAAI,WAAU,eACb,UAAA;AAAA,MAAAC,kCAAAA,IAAC,OAAA,EAAI,WAAU,8EAAA,CAA8E;AAAA,MAC7FA,kCAAAA,IAAC,KAAA,EAAE,WAAU,iBAAgB,UAAA,WAAA,CAAQ;AAAA,IAAA,EAAA,CACvC,EAAA,CACF;AAAA,EAEJ;AAEA,SACED,kCAAAA,KAAC,OAAA,EAAI,WAAU,2BAEb,UAAA;AAAA,IAAAC,kCAAAA,IAAC,UAAA,EAAO,WAAU,+BAChB,UAAAA,kCAAAA,IAAC,OAAA,EAAI,WAAU,+BACb,UAAAD,uCAAC,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,MAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,QAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,oCAAmC,UAAA,WAAO;AAAA,QACxDA,kCAAAA,IAAC,KAAA,EAAE,WAAU,sBAAqB,UAAA,gBAAA,CAAa;AAAA,MAAA,GACjD;AAAA,MACAD,kCAAAA,KAAC,OAAA,EAAI,WAAU,+BACZ,UAAA;AAAA,QAAA,eACCC,kCAAAA,IAAC,QAAA,EAAK,WAAW,6BACf,YAAY,SAAS,IAAI,IACrB,4BACA,6BACN,IACG,UAAA,aACH;AAAA,QAEFA,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,SAAS;AAAA,YACT,UAAU;AAAA,YACV,WAAU;AAAA,YACV,MAAK;AAAA,YAEJ,qBAAW,WAAW;AAAA,UAAA;AAAA,QAAA;AAAA,MACzB,EAAA,CACF;AAAA,IAAA,EAAA,CACF,GACF,GACF;AAAA,0CAGC,QAAA,EAAK,WAAU,+BACd,UAAAD,kCAAAA,KAAC,OAAA,EAAI,WAAU,aAEb,UAAA;AAAA,MAAAA,kCAAAA,KAAC,WAAA,EAAQ,WAAU,qCACjB,UAAA;AAAA,QAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,QAAI;AAAA,QAC7DD,kCAAAA,KAAC,OAAA,EAAI,WAAU,yCACb,UAAA;AAAA,UAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,YAAAC,kCAAAA,IAAC,SAAA,EAAM,WAAU,gDAA+C,UAAA,SAEhE;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,cAAc,qBAAqB,EAAE,OAAO,KAAK;AAAA,gBAClE,WAAU;AAAA,gBAET,UAAA,UAAU,IAAI,CAAA,SACbA,kCAAAA,IAAC,UAAA,EAAuB,OAAO,KAAK,MACjC,UAAA,KAAK,KAAA,GADK,KAAK,IAElB,CACD;AAAA,cAAA;AAAA,YAAA;AAAA,UACH,GACF;AAAA,iDAEC,OAAA,EACC,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAA,EAAM,WAAU,gDAA+C,UAAA,UAEhE;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,cAAc,qBAAqB,EAAE,OAAO,KAAK;AAAA,gBAClE,WAAU;AAAA,gBAET,oBAAU,OAAO,CAAA,SAAQ,KAAK,SAAS,MAAM,EAAE,IAAI,CAAA,SAClDA,kCAAAA,IAAC,UAAA,EAAuB,OAAO,KAAK,MACjC,eAAK,KAAA,GADK,KAAK,IAElB,CACD;AAAA,cAAA;AAAA,YAAA;AAAA,UACH,GACF;AAAA,iDAEC,OAAA,EACC,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAA,EAAM,WAAU,gDAA+C,UAAA,QAEhE;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,cAAc,sBAAsB,EAAE,OAAO,KAAK;AAAA,gBACnE,WAAU;AAAA,gBAET,UAAA,qBAAqB,IAAI,CAAA,YACxBA,kCAAAA,IAAC,UAAA,EAA2B,OAAO,QAAQ,OACxC,UAAA,QAAQ,KAAA,GADE,QAAQ,KAErB,CACD;AAAA,cAAA;AAAA,YAAA;AAAA,UACH,GACF;AAAA,iDAEC,OAAA,EACC,UAAA;AAAA,YAAAA,kCAAAA,IAAC,SAAA,EAAM,WAAU,gDAA+C,UAAA,eAEhE;AAAA,YACAA,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,cAAc,UAAU,EAAE,OAAO,KAAK;AAAA,gBACvD,aAAY;AAAA,gBACZ,WAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UACZ,EAAA,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,GACF;AAAA,MAGAD,kCAAAA,KAAC,WAAA,EAAQ,WAAU,qCACjB,UAAA;AAAA,QAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,QAAI;AAAA,QAC7DD,kCAAAA,KAAC,OAAA,EAAI,WAAU,aACb,UAAA;AAAA,UAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,YAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,cAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,qCAAoC,UAAA,QAAI;AAAA,cACtDA,kCAAAA,IAAC,KAAA,EAAE,WAAU,yBAAwB,UAAA,cAAA,CAAW;AAAA,YAAA,GAClD;AAAA,YACAD,kCAAAA,KAAC,SAAA,EAAM,WAAU,oDACf,UAAA;AAAA,cAAAC,kCAAAA;AAAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,SAAS,SAAS;AAAA,kBAClB,UAAU,CAAC,MAAM,cAAc,uBAAuB,EAAE,OAAO,OAAO;AAAA,kBACtE,WAAU;AAAA,gBAAA;AAAA,cAAA;AAAA,cAEZA,kCAAAA,IAAC,OAAA,EAAI,WAAU,0XAAA,CAA0X;AAAA,YAAA,EAAA,CAC3Y;AAAA,UAAA,GACF;AAAA,UAEAD,kCAAAA,KAAC,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,YAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,cAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,qCAAoC,UAAA,OAAG;AAAA,cACrDA,kCAAAA,IAAC,KAAA,EAAE,WAAU,yBAAwB,UAAA,YAAA,CAAS;AAAA,YAAA,GAChD;AAAA,YACAD,kCAAAA,KAAC,SAAA,EAAM,WAAU,oDACf,UAAA;AAAA,cAAAC,kCAAAA;AAAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,SAAS,SAAS;AAAA,kBAClB,UAAU,CAAC,MAAM,cAAc,gBAAgB,EAAE,OAAO,OAAO;AAAA,kBAC/D,WAAU;AAAA,gBAAA;AAAA,cAAA;AAAA,cAEZA,kCAAAA,IAAC,OAAA,EAAI,WAAU,0XAAA,CAA0X;AAAA,YAAA,EAAA,CAC3Y;AAAA,UAAA,GACF;AAAA,UAEAD,kCAAAA,KAAC,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,YAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,cAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,qCAAoC,UAAA,QAAI;AAAA,cACtDA,kCAAAA,IAAC,KAAA,EAAE,WAAU,yBAAwB,UAAA,aAAA,CAAU;AAAA,YAAA,GACjD;AAAA,YACAD,kCAAAA,KAAC,SAAA,EAAM,WAAU,oDACf,UAAA;AAAA,cAAAC,kCAAAA;AAAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,SAAS,SAAS;AAAA,kBAClB,UAAU,CAAC,MAAM,cAAc,oBAAoB,EAAE,OAAO,OAAO;AAAA,kBACnE,WAAU;AAAA,gBAAA;AAAA,cAAA;AAAA,cAEZA,kCAAAA,IAAC,OAAA,EAAI,WAAU,0XAAA,CAA0X;AAAA,YAAA,EAAA,CAC3Y;AAAA,UAAA,GACF;AAAA,UAEAD,kCAAAA,KAAC,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,YAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,cAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,qCAAoC,UAAA,QAAI;AAAA,cACtDA,kCAAAA,IAAC,KAAA,EAAE,WAAU,yBAAwB,UAAA,aAAA,CAAU;AAAA,YAAA,GACjD;AAAA,YACAD,kCAAAA,KAAC,SAAA,EAAM,WAAU,oDACf,UAAA;AAAA,cAAAC,kCAAAA;AAAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,SAAS,SAAS;AAAA,kBAClB,UAAU,CAAC,MAAM,cAAc,qBAAqB,EAAE,OAAO,OAAO;AAAA,kBACpE,WAAU;AAAA,gBAAA;AAAA,cAAA;AAAA,cAEZA,kCAAAA,IAAC,OAAA,EAAI,WAAU,0XAAA,CAA0X;AAAA,YAAA,EAAA,CAC3Y;AAAA,UAAA,EAAA,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,GACF;AAAA,MAGAD,kCAAAA,KAAC,WAAA,EAAQ,WAAU,qCACjB,UAAA;AAAA,QAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,QAAI;AAAA,QAC7DD,kCAAAA,KAAC,OAAA,EAAI,WAAU,yCACb,UAAA;AAAA,UAAAA,uCAAC,OAAA,EACC,UAAA;AAAA,YAAAC,kCAAAA,IAAC,SAAA,EAAM,WAAU,gDAA+C,UAAA,MAEhE;AAAA,YACAD,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,cAAc,SAAS,EAAE,OAAO,KAAkC;AAAA,gBACnF,WAAU;AAAA,gBAEV,UAAA;AAAA,kBAAAC,kCAAAA,IAAC,UAAA,EAAO,OAAM,QAAO,UAAA,QAAI;AAAA,kBACzBA,kCAAAA,IAAC,UAAA,EAAO,OAAM,SAAQ,UAAA,MAAE;AAAA,kBACxBA,kCAAAA,IAAC,UAAA,EAAO,OAAM,QAAO,UAAA,KAAA,CAAE;AAAA,gBAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UACzB,GACF;AAAA,iDAEC,OAAA,EACC,UAAA;AAAA,YAAAD,kCAAAA,KAAC,SAAA,EAAM,WAAU,gDAA+C,UAAA;AAAA,cAAA;AAAA,cACvD,SAAS;AAAA,cAAS;AAAA,YAAA,GAC3B;AAAA,YACAC,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,KAAI;AAAA,gBACJ,KAAI;AAAA,gBACJ,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,MAAM,cAAc,YAAY,SAAS,EAAE,OAAO,KAAK,CAAC;AAAA,gBACnE,WAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UACZ,EAAA,CACF;AAAA,QAAA,EAAA,CACF;AAAA,MAAA,GACF;AAAA,MAGAD,kCAAAA,KAAC,WAAA,EAAQ,WAAU,qCACjB,UAAA;AAAA,QAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,QAAI;AAAA,QAC7DD,kCAAAA,KAAC,OAAA,EAAI,WAAU,wBACb,UAAA;AAAA,UAAAC,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,SAAS;AAAA,cACT,WAAU;AAAA,cACV,MAAK;AAAA,cACN,UAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UAIDD,kCAAAA,KAAC,SAAA,EAAM,WAAU,+FAA8F,UAAA;AAAA,YAAA;AAAA,YAE7GC,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,QAAO;AAAA,gBACP,UAAU;AAAA,gBACV,WAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UACZ,GACF;AAAA,UAEAA,kCAAAA;AAAAA,YAAC;AAAA,YAAA;AAAA,cACC,SAAS;AAAA,cACT,WAAU;AAAA,cACV,MAAK;AAAA,cACN,UAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAED,EAAA,CACF;AAAA,MAAA,EAAA,CACF;AAAA,IAAA,EAAA,CACF,EAAA,CACF;AAAA,EAAA,GACF;AAEJ;AC/YA,MAAM,YAAY,SAAS,eAAe,cAAc;AACxD,IAAI,WAAW;AACb,QAAM,OAAO,WAAW,SAAS;AACjC,OAAK,OAAOA,kCAAAA,IAAC,kBAAA,CAAA,CAAiB,CAAE;AAClC,OAAO;AACL,UAAQ,MAAM,gCAAgC;AAChD;"}